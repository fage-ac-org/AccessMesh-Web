# 启用 gzip 压缩提升传输效率
# gzip on; docker基础镜像已默认启用gzip模块
gzip_static on;
gzip_comp_level 6;
gzip_min_length 1024;
gzip_vary on;
gzip_types
  text/plain
  text/css
  application/json
  application/javascript
  application/xml
  application/xml+rss
  text/javascript
  text/xml
  image/svg+xml
  application/x-font-ttf
  font/opentype
  application/vnd.ms-fontobject;

# 启用 brotli 压缩（需要 nginx-brotli 模块）
# brotli on; docker基础镜像已默认启用brotli模块
# brotli_static on;
brotli_comp_level 6;
brotli_min_length 1024;
brotli_types
  text/plain
  text/css
  application/json
  application/javascript
  application/xml
  application/xml+rss
  text/javascript
  text/xml
  image/svg+xml
  application/x-font-ttf
  font/opentype
  application/vnd.ms-fontobject;

# 自定义 nginx 配置，解决前端路由刷新 404 问题
server {
  listen 80;
  server_name _;

  # 指向 Vite 构建后的静态资源目录
  root /usr/share/nginx/html;
  index index.html;

  # SPA 路由配置
  location / {
    # 若找不到具体文件，则回退到单页应用入口
    try_files $uri $uri/ /index.html;
  }

  # 入口文件不缓存，确保每次访问都能加载最新资源引用
  location = /index.html {
    add_header Cache-Control "no-cache, no-store, must-revalidate" always;
    add_header Pragma "no-cache" always;
    add_header Expires "0" always;
  }

  # 前端静态资源（Vite 默认输出目录）开启长缓存
  location /assets/ {
    access_log off;
    expires 1y;
    add_header Cache-Control "public, immutable";
  }

  # 其他静态资源（图片、字体等）缓存配置
  location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp)$ {
    expires 30d;
    access_log off;
    add_header Cache-Control "public, immutable";
  }

  # favicon 缓存
  location = /favicon.ico {
    expires 7d;
    access_log off;
    add_header Cache-Control "public";
  }

  # platform-config.json 不缓存（可能需要动态更新）
  location = /platform-config.json {
    add_header Cache-Control "no-cache, no-store, must-revalidate";
    add_header Pragma "no-cache";
    add_header Expires "0";
  }
}

